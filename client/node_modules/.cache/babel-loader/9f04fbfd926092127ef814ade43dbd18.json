{"ast":null,"code":"var _jsxFileName = \"/Users/garethii/Desktop/exm.js/src/App.js\";\n\n/*import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CytoscapeComponent from 'react-cytoscapejs';\n\nclass MyApp extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const elements = [{\n      data: {\n        id: 'one',\n        label: 'Node 1'\n      },\n      position: {\n        x: 0,\n        y: 0\n      }\n    }, {\n      data: {\n        id: 'two',\n        label: 'Node 2'\n      },\n      position: {\n        x: 100,\n        y: 0\n      }\n    }, {\n      data: {\n        source: 'one',\n        target: 'two',\n        label: 'Edge from Node1 to Node2'\n      }\n    }];\n    return /*#__PURE__*/React.createElement(CytoscapeComponent, {\n      elements: elements,\n      style: {\n        width: '600px',\n        height: '600px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nReactDOM.render(React.createElement(MyApp, document.getElementById('root')));","map":{"version":3,"sources":["/Users/garethii/Desktop/exm.js/src/App.js"],"names":["React","ReactDOM","CytoscapeComponent","MyApp","Component","constructor","props","render","elements","data","id","label","position","x","y","source","target","width","height","createElement","document","getElementById"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,kBAAP,MAA+B,mBAA/B;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,UAAMC,QAAQ,GAAG,CACd;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAE,KAAN;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAAR;AAAwCC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX;AAAlD,KADc,EAEd;AAAEL,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAE,KAAN;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAAR;AAAwCC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb;AAAlD,KAFc,EAGd;AAAEL,MAAAA,IAAI,EAAE;AAAEM,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,MAAM,EAAE,KAAzB;AAAgCL,QAAAA,KAAK,EAAE;AAAvC;AAAR,KAHc,CAAjB;AAMA,wBAAO,oBAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAEH,QAA9B;AAAwC,MAAA,KAAK,EAAG;AAAES,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAbiC;;AAgBpCjB,QAAQ,CAACM,MAAT,CAAiBP,KAAK,CAACmB,aAAN,CAAoBhB,KAApB,EAA2BiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B,CAAjB","sourcesContent":["/*import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CytoscapeComponent from 'react-cytoscapejs';\n\nclass MyApp extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const elements = [\n       { data: { id: 'one', label: 'Node 1' }, position: { x: 0, y: 0 } },\n       { data: { id: 'two', label: 'Node 2' }, position: { x: 100, y: 0 } },\n       { data: { source: 'one', target: 'two', label: 'Edge from Node1 to Node2' } }\n    ];\n\n    return <CytoscapeComponent elements={elements} style={ { width: '600px', height: '600px' } } />;\n  }\n}\n\nReactDOM.render( React.createElement(MyApp, document.getElementById('root')));\n"]},"metadata":{},"sourceType":"module"}